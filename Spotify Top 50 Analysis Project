# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 


CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )


#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 


--  Who are the top 10 artists based on popularity?
SELECT artist_name FROM Spotifydata
ORDER BY popularity DESC 
LIMIT 10;

--  What artist released the longest song? 

SELECT MAX(duration_ms) as longest_track, artist_name FROM Spotifydata;

--  What is the average danceability by artist. List from highest to lowest?

SELECT artist_name, AVG(danceability) as avg_danceability
FROM Spotifydata
GROUP BY artist_name
ORDER BY avg_danceability DESC;

-- Which track has the highest valence (happiness) score?
SELECT track_name, valence
FROM Spotifydata
ORDER BY valence DESC
LIMIT 1;

-- What is the average song duration in milliseconds?
SELECT AVG(duration_ms) AS average_duration_ms FROM Spotifydata;

-- Which artist has the highest average loudness?
SELECT artist_name, AVG(loudness) AS average_loudness
FROM Spotifydata
GROUP BY artist_name
ORDER BY average_loudness DESC
LIMIT 1;


SELECT AVG(energy) AS average_energy
FROM Spotifydata
WHERE song_key = 5;

-- Which track has the fastest tempo?
SELECT track_name, tempo
FROM Spotifydata
ORDER BY tempo DESC
LIMIT 1;

-- Calculate the average popularity for the artists in the Spotify data table. Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.

WITH popularity_average_CTE AS (
    SELECT s.artist_name,
           AVG(s.popularity) AS average_popularity
      FROM SpotifyData s
     GROUP BY s.artist_name
)
SELECT artist_name,
       average_popularity,
       'Top Star' AS tag
  FROM popularity_average_CTE
 WHERE average_popularity >= 90;
